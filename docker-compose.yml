services:
  postgresql:
    container_name: postgresql
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=libms
    ports:
      - "5433:5432"
    volumes:
      - postgres:/var/lib/postgres/data
    networks:
      - lms-network
  mongodb:
    image: mongo
    container_name: mongodb
    depends_on:
      - postgresql
    ports:
      - "27018:27017"
    volumes:
      - mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=santho
      - MONGO_INITDB_ROOT_PASSWORD=santho
    networks:
      - lms-network

#  mongo-express:
#    image: mongo-express
#    container_name: mongo_express
#    restart: always
#    depends_on:
#      - mongodb
#    ports:
#      - "8081:8081"
#    networks:
#      - lms-network
#    environment:
#      - ME_CONFIG_BASICAUTH_USERNAME=mongo
#      - ME_CONFIG_BASICAUTH_PASSWORD=mongo
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=santho
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=santho
#      - ME_CONFIG_MONGODB_SERVER=mongodb
  backend:
    container_name: lms-backend
    build:
      context: ./library-management-system
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      - mongodb
    networks:
      - lms-network
  frontend:
    container_name: lms-frontend
    build:
      context: ./library-front-end
      dockerfile: Dockerfile
    environment:
      - "lmshost=lms-network"
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - lms-network
volumes:
  postgres:
  mongo:
networks:
  lms-network:
    driver: bridge